syntax = "proto2";

package core;

service Topic {

    rpc AdvertiseTopic(AdvertiseRequest) returns (Confirmation) {}
    rpc SubscribeTopic(TopicDefinition) returns (SubscribeResponse) {}

}

message SubscriberList {
    repeated string subscriber_id = 1;
}

message PublisherList {
    repeated string publisher_id = 1;
}

message Confirmation {
    required string uuid = 1;
    required int32 return_code = 2;
    optional string status = 3;
}

message TopicDefinition {
    required string uuid = 1;
    required string topic_name = 2;
    required string message_type = 3;
}

message AdvertiseRequest {
    required string client_id = 1;
    required TopicDefinition topic_def = 2;
}

message SubscribeResponse {
    required Confirmation confirmation = 1;
    repeated string publisher_list = 2;
}

message SubscriptionRequest {
    required TopicDefinition topic_def = 1;
}

message SubscriptionResponse {
    required Confirmation conf = 1;
    required TopicDefinition topic_def = 2;
    required int32 topic_port = 3;
}

// message TopicConfirmation {
//     required Confirmation conf = 1;
//     required TopicDefinition topic = 2;
//     oneof client_list {
//         SubscriberList subscribers = 3;
//         PublisherList publishers = 4;
//     }
// }