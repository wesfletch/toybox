syntax = "proto3";

package core;

import "core/Null.proto";

service Register {
    // refactor these to just use Client messages
    rpc RegisterClient(RegisterRequest) returns (RegisterResponse) {}
    rpc DeRegisterClient(DeRegisterRequest) returns (RegisterResponse) {}
    
    rpc GetClientInfo(Client_ID) returns (ClientResponse) {}
    rpc GetRegisteredClients(Null) returns (ClientList) {}
}

// or just use context.peer()
message ClientMetadata {
    string addr = 1;
    int32 port = 2;
    int32 data_port = 3;
}

message Client_ID {
    string client_id = 1;
}

message ClientInfo {
    string client_id = 1;
    ClientMetadata meta = 2;
}

message ClientList {
    repeated ClientInfo clients = 1;
}

message ClientResponse {
    int32 return_code = 1;
    ClientInfo client = 2;
    string status = 3;
}

message RegisterRequest {
    string client_id = 1;
    ClientMetadata meta = 2;
}

message RegisterResponse {
    int32 return_code = 1;
    string status = 2;
}

message DeRegisterRequest {
    string client_id = 1;
}