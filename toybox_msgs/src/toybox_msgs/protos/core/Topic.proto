syntax = "proto3";

package core;

service Topic {

    rpc AdvertiseTopic(AdvertiseRequest) returns (Confirmation) {}
    rpc SubscribeTopic(TopicDefinition) returns (SubscriptionResponse) {}

}

message SubscriberList {
    repeated string subscriber_id = 1;
}

message PublisherList {
    repeated string publisher_id = 1;
}

message Confirmation {
    string uuid = 1;
    int32 return_code = 2;
    string status = 3;
}

message TopicDefinition {
    string uuid = 1;
    string topic_name = 2;
    string message_type = 3;
}

message AdvertiseRequest {
    string client_id = 1;
    string host = 2;
    int32 topic_port = 3;
    TopicDefinition topic_def = 4;
}

message SubscribeResponse {
    Confirmation confirmation = 1;
    repeated string publisher_list = 2;
}

message SubscriptionRequest {
    TopicDefinition topic_def = 1;
}

message PublisherInfo {
    string publisher_id = 1;
    string publisher_host = 2;
    int32 topic_port = 3;
}

message SubscriptionResponse {
    Confirmation conf = 1;
    TopicDefinition topic_def = 2;
    repeated PublisherInfo publisher_list = 3;
}

// message TopicConfirmation {
//     Confirmation conf = 1;
//     TopicDefinition topic = 2;
//     oneof client_list {
//         SubscriberList subscribers = 3;
//         PublisherList publishers = 4;
//     }
// }